From c528d9f8ff3422ea223176b1495ebecac32659d0 Mon Sep 17 00:00:00 2001
From: Aviral Harsh <aviralharsh05@gmai.com>
Date: Fri, 15 May 2020 17:23:54 +0530
Subject: [PATCH] Create Patch File

---
 client.py      | 23 ++++++++++++++++-------
 client_test.py | 18 ++++++++++++++++--
 server.py      |  2 +-
 3 files changed, 33 insertions(+), 10 deletions(-)

diff --git a/client.py b/client.py
index 40badcd..05faf70 100644
--- a/client.py
+++ b/client.py
@@ -18,7 +18,8 @@
 #  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 #  DEALINGS IN THE SOFTWARE.
 
-import urllib2
+#import urllib.request as urllib2
+import urllib
 import time
 import json
 import random
@@ -35,25 +36,33 @@ def getDataPoint(quote):
 	stock = quote['stock']
 	bid_price = float(quote['top_bid']['price'])
 	ask_price = float(quote['top_ask']['price'])
-	price = bid_price
+	price = (bid_price + ask_price)/2
 	return stock, bid_price, ask_price, price
 
 def getRatio(price_a, price_b):
 	""" Get ratio of price_a and price_b """
 	""" ------------- Update this function ------------- """
 	""" Also create some unit tests for this function in client_test.py """
-	return 1
+	if (price_a == 0 or price_b == 0):
+		#When price_b is 0 avoid throwing ZeroDivisionError
+		return
+	elif (price_a and price_b ==0):
+		return
+	return price_a/price_b
+
 
 # Main
 if __name__ == "__main__":
 
 	# Query the price once every N seconds.
-	for _ in xrange(N):
-		quotes = json.loads(urllib2.urlopen(QUERY.format(random.random())).read())
+	for _ in range(N):
+		quotes = json.loads(urllib.urlopen(QUERY.format(random.random())).read())
 
 		""" ----------- Update to get the ratio --------------- """
+		prices = {}
 		for quote in quotes:
 			stock, bid_price, ask_price, price = getDataPoint(quote)
-			print "Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price)
+			prices[stock] = price
+			print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
 
-		print "Ratio %s" % getRatio(price, price)
+		print("Ratio %s" % getRatio(prices['ABC'], prices['DEF']))
\ No newline at end of file
diff --git a/client_test.py b/client_test.py
index a608a01..9be1bb8 100644
--- a/client_test.py
+++ b/client_test.py
@@ -1,5 +1,6 @@
 import unittest
-from client import getDataPoint
+from client import getDataPoint, getRatio
+
 
 class ClientTest(unittest.TestCase):
   def test_getDataPoint_calculatePrice(self):
@@ -8,6 +9,10 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
+      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'],
+                                             (quote['top_bid']['price'] + quote['top_ask']['price'])/2))
+
 
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
     quotes = [
@@ -15,11 +20,20 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
+      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'],
+                                             (quote['top_bid']['price'] + quote['top_ask']['price']) / 2))
 
 
   """ ------------ Add more unit tests ------------ """
+  def test_getRatio_checkIfPrice_aORPrice_bEqualZero(self):
+    self.assertEqual(getRatio(0, 1), None)
+    self.assertEqual(getRatio(1, 0), None)
+    self.assertEqual(getRatio(0, 0), None)
+
+
 
 
 
 if __name__ == '__main__':
-    unittest.main()
+    unittest.main()
\ No newline at end of file
diff --git a/server.py b/server.py
index d191771..46f40bc 100644
--- a/server.py
+++ b/server.py
@@ -316,4 +316,4 @@ if __name__ == '__main__':
     if not os.path.isfile('test.csv'):
         print "No data found, generating..."
         generate_csv()
-    run(App())
+    run(App())
\ No newline at end of file
-- 
2.26.2.windows.1

